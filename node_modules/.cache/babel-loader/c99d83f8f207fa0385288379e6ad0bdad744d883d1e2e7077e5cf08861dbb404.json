{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SHARAD\\\\Desktop\\\\CryptoTrack\\\\src\\\\components\\\\CoinInfo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { CryptoContext } from \"../CryptoContext\";\nimport { chartDays } from \"../data\";\nimport '../App.css';\nimport axios from \"axios\";\nimport { TailSpin } from \"react-loader-spinner\";\nimport { HistoricalChart } from \"../api\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart, registerables } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(...registerables);\nconst CoinInfo = ({\n  coin\n}) => {\n  _s();\n  // const coinId = coin;\n  const {\n    currency\n  } = useContext(CryptoContext);\n  const [historicData, setHistoricData] = useState();\n  const [days, setDays] = useState(1);\n  // const [flag, setFlag] = useState(false);\n\n  const fetchHistoricData = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(HistoricalChart(coin, currency, days));\n      // console.log(data);\n      setHistoricData(data.prices);\n      // setFlag(true);\n    } catch (error) {\n      console.log(\"Error in Chart API\");\n    }\n  };\n  useEffect(() => {\n    fetchHistoricData();\n    // eslint-disable-next-line\n  }, [days, currency]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart\",\n    children: [!historicData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\",\n      children: /*#__PURE__*/_jsxDEV(TailSpin, {\n        height: \"80\",\n        width: \"80\",\n        color: \"#4fa94d\",\n        ariaLabel: \"tail-spin-loading\",\n        radius: \"1\",\n        wrapperStyle: {},\n        wrapperClass: \"\",\n        visible: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Line, {\n      data: {\n        labels: historicData === null || historicData === void 0 ? void 0 : historicData.map(coin => {\n          let date = new Date(coin[0]);\n          let time = date.getHours() > 12 ? `${date.getHours() - 12}:${date.getMinutes()} PM` : `${date.getHours()}:${date.getMinutes()} AM`;\n          return days === 1 ? time : date.toLocaleDateString();\n        }),\n        datasets: [{\n          data: historicData === null || historicData === void 0 ? void 0 : historicData.map(coin => coin[1]),\n          label: `Price ( Past ${days} Days ) in ${currency}`,\n          borderColor: \"#EEBC1D\"\n        }]\n      },\n      options: {\n        responsive: true,\n        elements: {\n          point: {\n            radius: 1\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chartButtons\",\n      children: chartDays.map(day => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"chartControlButton\",\n        onClick: () => {\n          setDays(day.value);\n        },\n        children: day.label\n      }, day.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(CoinInfo, \"wa27owXZopYtH1NS4SiUgR0DRdM=\");\n_c = CoinInfo;\nexport default CoinInfo;\nvar _c;\n$RefreshReg$(_c, \"CoinInfo\");","map":{"version":3,"names":["React","useState","useContext","useEffect","CryptoContext","chartDays","axios","TailSpin","HistoricalChart","Line","Chart","registerables","jsxDEV","_jsxDEV","register","CoinInfo","coin","_s","currency","historicData","setHistoricData","days","setDays","fetchHistoricData","data","get","prices","error","console","log","className","children","height","width","color","ariaLabel","radius","wrapperStyle","wrapperClass","visible","fileName","_jsxFileName","lineNumber","columnNumber","labels","map","date","Date","time","getHours","getMinutes","toLocaleDateString","datasets","label","borderColor","options","responsive","elements","point","day","onClick","value","_c","$RefreshReg$"],"sources":["C:/Users/SHARAD/Desktop/CryptoTrack/src/components/CoinInfo.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport { CryptoContext } from \"../CryptoContext\";\r\nimport { chartDays } from \"../data\";\r\nimport '../App.css'\r\nimport axios from \"axios\";\r\nimport { TailSpin } from \"react-loader-spinner\";\r\nimport { HistoricalChart } from \"../api\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { Chart, registerables } from \"chart.js\";\r\nChart.register(...registerables);\r\n\r\nconst CoinInfo = ({ coin }) => {\r\n  // const coinId = coin;\r\n  const { currency } = useContext(CryptoContext);\r\n  const [historicData, setHistoricData] = useState();\r\n  const [days, setDays] = useState(1);\r\n  // const [flag, setFlag] = useState(false);\r\n\r\n  const fetchHistoricData = async () => {\r\n    try {\r\n      const { data } = await axios.get(HistoricalChart(coin, currency, days));\r\n      // console.log(data);\r\n      setHistoricData(data.prices);\r\n      // setFlag(true);\r\n    } catch (error) {\r\n      console.log(\"Error in Chart API\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchHistoricData();\r\n    // eslint-disable-next-line\r\n  }, [days, currency]);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {!historicData ? (\r\n        <div className=\"loader\">\r\n          <TailSpin\r\n            height=\"80\"\r\n            width=\"80\"\r\n            color=\"#4fa94d\"\r\n            ariaLabel=\"tail-spin-loading\"\r\n            radius=\"1\"\r\n            wrapperStyle={{}}\r\n            wrapperClass=\"\"\r\n            visible={true}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <Line\r\n          data={{\r\n            labels: historicData?.map((coin) => {\r\n              let date = new Date(coin[0]);\r\n              let time =\r\n                date.getHours() > 12\r\n                  ? `${date.getHours() - 12}:${date.getMinutes()} PM`\r\n                  : `${date.getHours()}:${date.getMinutes()} AM`;\r\n              return days === 1 ? time : date.toLocaleDateString();\r\n            }),\r\n\r\n            datasets: [\r\n              {\r\n                data: historicData?.map((coin) => coin[1]),\r\n                label: `Price ( Past ${days} Days ) in ${currency}`,\r\n                borderColor: \"#EEBC1D\",\r\n              },\r\n            ],\r\n          }}\r\n          options={{\r\n            responsive: true,\r\n            elements: {\r\n              point: {\r\n                radius: 1,\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n      <div className=\"chartButtons\">\r\n        {chartDays.map((day) => (\r\n          <button className=\"chartControlButton\"\r\n            key={day.value}\r\n            onClick={() => {\r\n              setDays(day.value);\r\n            }}\r\n          >\r\n            {day.label}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CoinInfo;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}