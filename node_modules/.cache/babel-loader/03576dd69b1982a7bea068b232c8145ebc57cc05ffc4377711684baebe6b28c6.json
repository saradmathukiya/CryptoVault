{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SHARAD\\\\Desktop\\\\CryptoTrack\\\\src\\\\CryptoContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CryptoContext = /*#__PURE__*/createContext();\nexport default function CryptoContextProvider({\n  children\n}) {\n  _s();\n  const [currency, setCurrency] = useState(\"INR\");\n  const [symbol, setSymbol] = useState(\"₹\");\n  function numberWithCommas(x) {\n    return x === null || x === void 0 ? void 0 : x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n  useEffect(() => {\n    if (currency === \"INR\") setSymbol(\"₹\");else if (currency === \"USD\") setSymbol(\"$\");\n  }, [currency]);\n  return /*#__PURE__*/_jsxDEV(CryptoContext.Provider, {\n    value: {\n      currency,\n      setCurrency,\n      symbol,\n      numberWithCommas\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(CryptoContextProvider, \"Gq7De48h8abbN7rXPNWvFlysLIk=\");\n_c = CryptoContextProvider;\n;\nvar _c;\n$RefreshReg$(_c, \"CryptoContextProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","jsxDEV","_jsxDEV","CryptoContext","CryptoContextProvider","children","_s","currency","setCurrency","symbol","setSymbol","numberWithCommas","x","toString","replace","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/SHARAD/Desktop/CryptoTrack/src/CryptoContext.js"],"sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\r\n\r\nexport const CryptoContext  = createContext();\r\n\r\nexport default function CryptoContextProvider({children}){\r\n  const [currency, setCurrency] = useState(\"INR\");\r\n  const [symbol, setSymbol] = useState(\"₹\");\r\n  function numberWithCommas(x) {\r\n    return x?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (currency === \"INR\") setSymbol(\"₹\");\r\n    else if (currency === \"USD\") setSymbol(\"$\");\r\n  }, [currency]);\r\n\r\n  return (\r\n    <CryptoContext.Provider value={{ currency, setCurrency, symbol, numberWithCommas}}>\r\n      {children}\r\n    </CryptoContext.Provider>\r\n  );\r\n};\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,aAAa,gBAAIL,aAAa,CAAC,CAAC;AAE7C,eAAe,SAASM,qBAAqBA,CAAC;EAACC;AAAQ,CAAC,EAAC;EAAAC,EAAA;EACvD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,GAAG,CAAC;EACzC,SAASW,gBAAgBA,CAACC,CAAC,EAAE;IAC3B,OAAOA,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEC,QAAQ,CAAC,CAAC,CAACC,OAAO,CAAC,uBAAuB,EAAE,GAAG,CAAC;EAC5D;EAEAf,SAAS,CAAC,MAAM;IACd,IAAIQ,QAAQ,KAAK,KAAK,EAAEG,SAAS,CAAC,GAAG,CAAC,CAAC,KAClC,IAAIH,QAAQ,KAAK,KAAK,EAAEG,SAAS,CAAC,GAAG,CAAC;EAC7C,CAAC,EAAE,CAACH,QAAQ,CAAC,CAAC;EAEd,oBACEL,OAAA,CAACC,aAAa,CAACY,QAAQ;IAACC,KAAK,EAAE;MAAET,QAAQ;MAAEC,WAAW;MAAEC,MAAM;MAAEE;IAAgB,CAAE;IAAAN,QAAA,EAC/EA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B;AAACd,EAAA,CAjBuBF,qBAAqB;AAAAiB,EAAA,GAArBjB,qBAAqB;AAiB5C;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}